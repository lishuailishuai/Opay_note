


format_number(sum(loan_amount_usd),0) as loan_amount_usd,
1.
          select
          loan_month,
          round(loan_amount_usd_expire,2),
          loan_cnt_expire,
          overdue_cnt,
          1_between_7DPD,
          8_between_15DPD,
          16_between_30DPD,
          overdue_over_30_cnt,
          
          concat(round(overdue_cnt/loan_cnt_expire*100,2),'%'),
          concat(round(Existing_overdue7_cnt/loan_cnt_expire*100,2),'%'),
          concat(round(Existing_overdue15_cnt/loan_cnt_expire*100,2),'%'),
          concat(round(Existing_overdue30_cnt/loan_cnt_expire*100,2),'%'),
          
          concat(round(downpay_overdue0_cnt/downpay_fzrq0_cnt*100,2),'%'),
          concat(round(downpay_overdue7_cnt/downpay_fzrq7_cnt*100,2),'%'),
          concat(round(downpay_overdue15_cnt/downpay_fzrq15_cnt*100,2),'%'),
          concat(round(downpay_overdue30_cnt/downpay_fzrq30_cnt*100,2),'%')
          from
          ocredit_phones_dw.app_ocredit_phones_overdue_cube_d
          where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and loan_month is not null
          order by loan_month



2.

          select
          concat_ws('-',regexp_replace(substr(loan_week,6,5),'-',''),regexp_replace(substr(loan_week,17,5),'-','')) aa,
          round(loan_amount_usd_expire,2),
          loan_cnt_expire,
          overdue_cnt,
          1_between_7DPD,
          8_between_15DPD,
          16_between_30DPD,
          overdue_over_30_cnt,
          
          concat(round(overdue_cnt/loan_cnt_expire*100,2),'%'),
          concat(round(Existing_overdue7_cnt/loan_cnt_expire*100,2),'%'),
          concat(round(Existing_overdue15_cnt/loan_cnt_expire*100,2),'%'),
          concat(round(Existing_overdue30_cnt/loan_cnt_expire*100,2),'%'),
          
          concat(round(downpay_overdue0_cnt/downpay_fzrq0_cnt*100,2),'%'),
          concat(round(downpay_overdue7_cnt/downpay_fzrq7_cnt*100,2),'%'),
          concat(round(downpay_overdue15_cnt/downpay_fzrq15_cnt*100,2),'%'),
          concat(round(downpay_overdue30_cnt/downpay_fzrq30_cnt*100,2),'%')
          from
          ocredit_phones_dw.app_ocredit_phones_overdue_cube_d
          where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and loan_week is not null
          and loan_week>=concat(date_add(next_day('{pt}','MO'),-7*4),'_',date_add(next_day('{pt}','MO'),-7*3-1))
          and loan_week<=concat(date_add(next_day('{pt}','MO'),-7),'_',date_add(next_day('{pt}','MO'),-1))
          order by 
          aa --必须要用别名




3.

          select
          merchant_name,
          round(loan_amount_usd_expire,2),
          loan_cnt_expire,
          overdue_cnt,
          1_between_7DPD,
          8_between_15DPD,
          16_between_30DPD,
          overdue_over_30_cnt,
          
          concat(round(overdue_cnt/loan_cnt_expire*100,2),'%'),
          concat(round(Existing_overdue7_cnt/loan_cnt_expire*100,2),'%'),
          concat(round(Existing_overdue15_cnt/loan_cnt_expire*100,2),'%'),
          concat(round(Existing_overdue30_cnt/loan_cnt_expire*100,2),'%'),
          
          concat(round(downpay_overdue0_cnt/downpay_fzrq0_cnt*100,2),'%'),
          concat(round(downpay_overdue7_cnt/downpay_fzrq7_cnt*100,2),'%'),
          concat(round(downpay_overdue15_cnt/downpay_fzrq15_cnt*100,2),'%'),
          concat(round(downpay_overdue30_cnt/downpay_fzrq30_cnt*100,2),'%')
          from
          ocredit_phones_dw.app_ocredit_phones_overdue_cube_d
          where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and merchant_name is not null
          order by merchant_name









format_number(sum(loan_amount_usd),0) as loan_amount_usd,









CREATE EXTERNAL TABLE ocredit_phones_dw.app_ocredit_phones_overdue_cube_d(  
loan_time string comment '放款日',
loan_month string comment '放款月份',
loan_week string comment '放宽周',
merchant_name string comment '商户名称',
loan_amount_usd_expire double comment '贷款金额USD_到期',
loan_cnt_expire bigint comment '放款件数_到期',
overdue_cnt bigint comment '逾期件数',
1_between_7DPD bigint comment '当前逾期1-7天件数',
8_between_15DPD bigint comment '当前逾期8-15天件数',
16_between_30DPD bigint comment '当前逾期16-30天件数',
overdue_over_30_cnt bigint comment '逾期30+天件数',
Existing_overdue7_cnt bigint comment '当前逾期7+天件数',
Existing_overdue15_cnt bigint comment '当前逾期15+天件数',
Existing_overdue30_cnt bigint comment '当前逾期30+天件数',
downpay_overdue0_cnt bigint comment '首期逾期0+天件数',
downpay_overdue7_cnt bigint comment '首期逾期7+天件数',
downpay_overdue15_cnt bigint comment '首期逾期15+天件数',
downpay_overdue30_cnt bigint comment '首期逾期30+天件数',
downpay_fzrq0_cnt bigint comment '当前与预计还款时间差值0+件数',
downpay_fzrq7_cnt bigint comment '当前与预计还款时间差值7+件数',
downpay_fzrq15_cnt bigint comment '当前与预计还款时间差值15+件数',
downpay_fzrq30_cnt bigint comment '当前与预计还款时间差值30+件数'
)
COMMENT '逾期汇总表'  
PARTITIONED BY (   
country_code string COMMENT '二位国家码',
dt string COMMENT '分区时间'
)
STORED AS orc  
LOCATION  
 'oss://opay-datalake/ocredit_phones/ocredit_phones_dw/app_ocredit_phones_overdue_cube_d'
TBLPROPERTIES (  
'orc.compress'='SNAPPY'
);




          select
          main.loan_time as loan_time,
          main.loan_month as loan_month,
          main.loan_week as loan_week,
          main.merchant_name as merchant_name,
          sum(case when t2.order_id is not null then main.loan_amount*0.2712/100 else null end) as loan_amount_usd_expire,
          count(DISTINCT case when t2.order_id is not null then t2.order_id else null end) as loan_cnt_expire,
          
          count(DISTINCT case when t2.overdue_days >0 then t2.order_id else null end) as overdue_cnt,
          count(DISTINCT case when t2.overdue_days between 1 and 7 then t2.order_id else null end) as 1_between_7DPD,
          count(DISTINCT case when t2.overdue_days between 8 and 15 then t2.order_id else null end) as 8_between_15DPD,
          count(DISTINCT case when t2.overdue_days between 16 and 30 then t2.order_id else null end) as 16_between_30DPD,
          count(DISTINCT case when t2.overdue_days >30 then t2.order_id else null end) as overdue_over_30_cnt,
          
          
          count(DISTINCT case when t2.overdue_days >7 then t2.order_id else null end) as Existing_overdue7_cnt,
          count(DISTINCT case when t2.overdue_days >15 then t2.order_id else null end) as Existing_overdue15_cnt,
          count(DISTINCT case when t2.overdue_days >30 then t2.order_id else null end) as Existing_overdue30_cnt,
          
          count(DISTINCT case when t3.overdue_days >0 then t3.order_id else null end) as downpay_overdue0_cnt,
          count(DISTINCT case when t3.overdue_days >7 then t3.order_id else null end) as downpay_overdue7_cnt,
          count(DISTINCT case when t3.overdue_days >15 then t3.order_id else null end) as downpay_overdue15_cnt,
          count(DISTINCT case when t3.overdue_days >30 then t3.order_id else null end) as downpay_overdue30_cnt,
          
          count(DISTINCT case when t3.fzrq > 0 then t3.order_id end) as downpay_fzrq0_cnt,
          count(DISTINCT case when t3.fzrq > 7 then t3.order_id end) as downpay_fzrq7_cnt,
          count(DISTINCT case when t3.fzrq > 15 then t3.order_id end) as downpay_fzrq15_cnt,
          count(DISTINCT case when t3.fzrq > 30 then t3.order_id end) as downpay_fzrq30_cnt
          
          from
          (
          select
          order_id,--订单号
          user_id,--销售端用户ID
          order_status,--订单状态
          pay_status,--支付状态
          payment_status,--还款状态
          product_name,--产品名称
          merchant_name,--商户
          (case when product_type='1' then '自营' when product_type='2' then '合作商' else null end) as product_type,--经营形式
          (case when order_id='012020011001240073' then '2020-01-04' else to_date(loan_time) end) as loan_time,--放款时间
          substr((case when order_id='012020011001240073' then '2020-01-04' else to_date(loan_time) end),1,7) as loan_month,--放款月份
          concat(date_add(next_day((case when order_id='012020011001240073' then '2020-01-04' else to_date(loan_time) end),'MO'),-7),'_',date_add(next_day((case when order_id='012020011001240073' then '2020-01-04' else to_date(loan_time) end),'MO'),-1)) as loan_week,--放款周
          terms as total_period_no,--期数
          down_payment/100 as down_payment,--首付金额
          loan_amount/100 as loan_amount,--借款金额
          date_sub(current_date(),1) as jzrq,--最新有数据的一天
          add_months(date_sub(current_date(),1),-1) as dqrq--最新有数据的一天的前一个月的日期
          from ocredit_phones_dw.dwd_ocredit_phones_order_base_df
          where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and date_add(from_unixtime(unix_timestamp(create_time)+3600,'yyyy-MM-dd'),0)>='2019-12-28'
          and order_status='81' and loan_time is not null
          --放款成功
          )main
          
          left join
          (select
          t1.order_id,max(t1.overdue_days) as overdue_days,--用户分期，最大的未还钱的逾期天数
          count(t1.period_no) as due_period_no,--总分期数
          count(case when t1.plan_status='OEVERDUE' then t1.period_no else null end) as overdue_period_no,--逾期且没有还钱的分期有几个
          count(case when t1.plan_status='PERMANENT' then t1.period_no else null end) as fact_period_no,--还钱的分期有几个（不知道有没有逾期）
          sum(t1.due_total_amount) as due_total_amount,--按理应该还的所有钱（每月相加 月还总额）
          sum(t1.due_capital_amount) as due_capital_amount,--按理应该还的所有钱（每月相加 月还本金）
          sum(case when t1.plan_status='PERMANENT' then t1.fact_total_amount else null end) as fact_total_amount,--已经实际还的所有钱（实际月还总额）（不知道有没有逾期）
          sum(case when t1.plan_status='PERMANENT' then t1.fact_capital_amount else null end) as fact_capital_amount,--已经实际还的所有钱（实际月还本金）（不知道有没有逾期）
          sum(case when t1.plan_status='OEVERDUE' then t1.due_total_amount else null end) as overdue_total_amount,--逾期且没有还的所有钱（月还总额）
          sum(case when t1.plan_status='OEVERDUE' then t1.due_capital_amount else null end) as overdue_capital_amount--逾期且没有还的所有钱（月还本金）
          from
          (select
          order_id,--订单id
          user_id,--用户id
          contract_id,--合同编号
          current_period as period_no,--当前还款期数
          to_date(repayment_time) as due_tm,--预计还款时间
          month_total_amount  as due_total_amount,--月还总额
          month_amount as due_capital_amount,--月还本金
          to_date(real_repayment_time) as fact_tm,--实际还款时间
          real_total_amount as fact_total_amount,--实还总额
          real_amount as fact_capital_amount,--实还本金
          current_repayment_status as repayment_status,--当前还款状态:(0:未还清，1:已还清)
          case when current_repayment_status='3' then 'PERMANENT' else 'OVERDUE' end as plan_status,
          case when current_repayment_status='3' then 0 else datediff(current_date(),to_date(repayment_time)) end as overdue_days --未还钱的逾期天数
          from  ocredit_phones_dw.dwd_ocredit_phones_repayment_detail_df
          where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and to_date(repayment_time) <= date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          )t1 group by t1.order_id
          )t2 on main.order_id=t2.order_id
          
          left join
          (
          select
          date_sub(current_date(),1) as jzrq,----最新有数据的一天
          datediff(current_date(),to_date(date(repayment_time))) as fzrq,--没还钱，就是逾期天数
          order_id,
          user_id,
          contract_id,--
          current_period as period_no,
          date(repayment_time) as due_tm,--预计还款时间
          month_total_amount  as due_total_amount,--月还总额
          month_amount as due_capital_amount,--月还本金
          poundage as  due_poundage_amount,--手续费
          current_interest_rate as current_interest_rate,--利息
          real_repayment_time as fact_tm,--实际还款时间
          real_total_amount as fact_total_amount,--实还总额
          real_amount as fact_capital_amount,--实还本金
          real_service_fee as  fact_service_amount,--实还服务费
          real_interest as fact_interest_amount,--实还利息
          real_poundage as fact_poundage_amount,--实还手续费
          real_penalty_interest as fact_penalty_amount,--实还罚息
          current_repayment_status as repayment_status,--当前还款状态:(0:未还清，1:已还清)
          (case  
               when current_repayment_status in ('3') and datediff(to_date(real_repayment_time),to_date(repayment_time))>0 then 'OVERDUE_CLEARED'--已还但逾期
               when current_repayment_status in ('3') and datediff(to_date(real_repayment_time),to_date(repayment_time))<=0 then 'CLEARED'--已还没有逾期
               else 'OVERDUE' end) as plan_status,--逾期，没还钱
          (case  
               when current_repayment_status in ('3') and datediff(to_date(real_repayment_time),to_date(repayment_time))>0 then datediff(to_date(real_repayment_time),to_date(repayment_time))--已还的逾期天数
               when current_repayment_status in ('3') and datediff(to_date(real_repayment_time),to_date(repayment_time))<=0 then 0
               else datediff(current_date(),to_date(repayment_time)) end) as overdue_days    --未还的逾期天数
          from  ocredit_phones_dw.dwd_ocredit_phones_repayment_detail_df
          where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and to_date(repayment_time) <= date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and current_period='1'--当钱还款期数为1
          )t3 on main.order_id=t3.order_id
          where t2.order_id is not null
          group by
          main.loan_time,
          main.loan_month,
          main.loan_week,
          main.merchant_name
          grouping sets(main.loan_time,main.loan_month,main.loan_week,main.merchant_name)








