
---part1 当月风控全流程通过情况和时效情况
SET mapreduce.job.queuename=root.data_bi;
select
case when to_date(t2.Acreate_time) is not null then to_date(t2.Acreate_time) else  '合计' end as `进件日期`,
count(distinct t2.order_id) as `进件订单数`,
count(distinct t2.opay_id) as `进件用户数`,
concat(round(count(distinct case when t2.order_status not in ('10','12','13','99') then t2.opay_id else null end)/count(distinct t2.opay_id)*100,2),'%')  as `初审通过率`,
concat(round(count(distinct case when t2.order_status not in ('10','11','12','13','30','32','99') then t2.opay_id else null end)/count(distinct case when t2.order_status not in (10,12,13,99) then t2.opay_id else null end)*100,2),'%')  as `复审通过率`,

concat(round(count(distinct case when t2.order_status ='81' then t2.opay_id else null end)/count(distinct case when t2.order_status not in ('10','11','12','13','30','32','99')  then t2.opay_id else null end)*100,2),'%')  as `复审到放款转化率`,
concat(round(count(distinct case when t2.order_status not in ('10','11','12','13','30','32','99') then t2.opay_id else null end)/count(distinct t2.opay_id)*100,2),'%')  as `进件到风控通过转化率`,
concat(round(count(distinct case when t2.order_status ='81' then t2.opay_id else null end)/count(distinct t2.opay_id)*100,2),'%')  as `进件到放款转化率`,

---round(avg(case when t2.s10 is not null then t2.s1 else null end),2)as `进件-初审流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s2 else null end),2)as `初审实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s3 else null end),2) as `初审-复审流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s4 else null end),2) as `复审实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s5 else null end),2) as `复审-支付流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s6 else null end),2) as `支付实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s7 else null end),2) as `支付-合同流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s8 else null end),2) as `合同审核实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s9 else null end),2) as `合同审核-放款流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s10 else null end),2) as `总用时(时)`

from 
(select 
t1.Acreate_time,
t1.opay_id,
t1.order_id,
t1.user_id,
t1.terms,
t1.order_status,
((unix_timestamp(t1.B1create_time) - unix_timestamp(t1.Acreate_time) ) / 60) as s1,      ----进件日初审流转时间
((unix_timestamp(t1.B1update_time) - unix_timestamp(t1.B1create_time) ) / 60) as s2,----初审实际时间
(case when t1.B2create_time is not NULL then ((unix_timestamp(t1.B2create_time) - unix_timestamp(t1.B1update_time) ) / 60) else NULL end) as s3, ---初审结束-复审开始流转时间
(case when t1.B2update_time is not NULL then ((unix_timestamp(t1.B2update_time) - unix_timestamp(t1.B2create_time) ) / 60) else NULL end) as s4,---复审实际时间
(case when t1.Ccreate_time is not NULL then ((unix_timestamp(t1.Ccreate_time) - unix_timestamp(t1.B2update_time) ) / 60) else NULL end) as s5, ---复审结束-支付流转时间
(case when t1.Cpay_time is not NULL then ((unix_timestamp(t1.Cpay_time) - unix_timestamp(t1.Ccreate_time) ) / 60) else NULL end) as s6,  --- 支付实际时间
(case when t1.apply_time is not NULL and t1.Cpay_time is not NULL  then ((unix_timestamp(t1.apply_time) - unix_timestamp(t1.Cpay_time) ) / 60) else NULL end) as s7, --- 支付结束-合同审核流转时间
(case when t1.apply_time is not NULL and t1.last_audit_time is not NULL then ((unix_timestamp(t1.last_audit_time) - unix_timestamp(t1.apply_time) ) / 60) else NULL end) as s8,--- 合同审核实际时间
(case when t1.loan_time is not NULL and t1.last_audit_time is not NULL then ((unix_timestamp(t1.loan_time) - unix_timestamp(t1.last_audit_time) ) / 60) else NULL end) as s9,--- 合同通过到放款实际时间
(case when t1.loan_time is not NULL then ((unix_timestamp(t1.loan_time) - unix_timestamp(t1.Acreate_time) ) / (3600)) else NULL end) as s10   --- 进件到放款实际时间
from 
(
select 
distinct
cast(a.opay_id as string) `opay_id`,
cast(a.order_id as string) `order_id`,
cast(a.user_id as string) `user_id`,
a.order_status,
a.create_time as `Acreate_time`,   ---进件时间
a.terms,
a.down_payment,
b1.create_time as `B1create_time`,  ---初审创建时间
b1.update_time as `B1update_time`,  ---初审结束时间
b2.create_time as `B2create_time`,  ---复审创建时间
b2.update_time as `B2update_time`,  ---复审结束时间
c.create_time as `Ccreate_time`,    ---支付创建时间
c.pay_time as `Cpay_time`,          ---支付结束时间
d.apply_time,                      ---合同审核开始时间
d.last_audit_time,                 ---合同审核结束时间
a.loan_time

from 

(select 
opay_id,
order_id,
user_id,
order_status,
create_time,
loan_time,
terms,
down_payment
from ocredit_phones_dw_ods.ods_sqoop_base_t_order_df     ----主订单表，过滤掉测试数据
where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
and to_date(create_time)>='2019-12-28'
and user_id not in 
(
'1209783514507214849', 
'1209126038292123650',
'1210903150317494274',
'1214471918163460097',
'1215642304343425026',
'1226878328587288578')
and business_type = '0'
) as a

left join 
(
select order_id,min(create_time) as create_time,max(update_time) as update_time
from ocredit_phones_dw_ods.ods_sqoop_base_t_order_audit_history_df  ---审批记录表，1是初审
where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
and audit_type='1'
group by order_id
)b1 on a.order_id=b1.order_id

left join 
(
select order_id,min(create_time) as create_time,max(update_time) as update_time
from ocredit_phones_dw_ods.ods_sqoop_base_t_order_audit_history_df  ---审批记录表，2是复审
where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
and audit_type='2'
group by order_id
)b2 on a.order_id=b2.order_id

left join
(
select order_id,min(create_time) as create_time,max(pay_time) as pay_time
from ocredit_phones_dw_ods.ods_sqoop_base_t_pay_order_df   ---首付款支付信息表
where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
and pay_type='0'
and business_type='0'
group by order_id
) as c on a.order_id=c.order_id

left join 
(
select order_id,min(apply_time) as apply_time,max(last_audit_time) as last_audit_time,
max(final_audit_pass) as final_audit_pass
from ocredit_phones_dw_ods.ods_sqoop_base_t_contract_df     ---合同信息表，
where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
and business_type='0'
group by order_id
)as d
on a.order_id=d.order_id 
)t1 
)t2
where substr(t2.Acreate_time,1,7) = substr(date_sub(current_date(),1),1,7)
group by to_date(t2.Acreate_time) 
with rollup
order by `进件日期` desc ;




---part2 历史各月风控全流程通过情况和时效情况
SET mapreduce.job.queuename=root.data_bi;
select
case when substr(t2.Acreate_time,1,7) is not null then substr(t2.Acreate_time,1,7) else '合计' end  as `进件月份`,
count(distinct t2.order_id) as `进件订单数`,
count(distinct t2.opay_id) as `进件用户数`,
concat(round(count(distinct case when t2.order_status not in ('10','12','13','99') then t2.opay_id else null end)/count(distinct t2.opay_id)*100,2),'%')  as `初审通过率`,
concat(round(count(distinct case when t2.order_status not in ('10','11','12','13','30','32','99') then t2.opay_id else null end)/count(distinct case when t2.order_status not in (10,12,13,99) then t2.opay_id else null end)*100,2),'%')  as `复审通过率`,

concat(round(count(distinct case when t2.order_status ='81' then t2.opay_id else null end)/count(distinct case when t2.order_status not in ('10','11','12','13','30','32','99')  then t2.opay_id else null end)*100,2),'%')  as `复审到放款转化率`,
concat(round(count(distinct case when t2.order_status not in ('10','11','12','13','30','32','99') then t2.opay_id else null end)/count(distinct t2.opay_id)*100,2),'%')  as `进件到风控通过转化率`,
concat(round(count(distinct case when t2.order_status ='81' then t2.opay_id else null end)/count(distinct t2.opay_id)*100,2),'%')  as `进件到放款转化率`,

---round(avg(case when t2.s10 is not null then t2.s1 else null end),2)as `进件-初审流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s2 else null end),2)as `初审实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s3 else null end),2) as `初审-复审流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s4 else null end),2) as `复审实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s5 else null end),2) as `复审-支付流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s6 else null end),2) as `支付实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s7 else null end),2) as `支付-合同流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s8 else null end),2) as `合同审核实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s9 else null end),2) as `合同审核-放款流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s10 else null end),2) as `总用时(时)`

from 
(select 
t1.Acreate_time,
t1.opay_id,
t1.order_id,
t1.user_id,
t1.terms,
t1.order_status,
((unix_timestamp(t1.B1create_time) - unix_timestamp(t1.Acreate_time) ) / 60) as s1,      ----进件日初审流转时间
((unix_timestamp(t1.B1update_time) - unix_timestamp(t1.B1create_time) ) / 60) as s2,----初审实际时间
(case when t1.B2create_time is not NULL then ((unix_timestamp(t1.B2create_time) - unix_timestamp(t1.B1update_time) ) / 60) else NULL end) as s3, ---初审结束-复审开始流转时间
(case when t1.B2update_time is not NULL then ((unix_timestamp(t1.B2update_time) - unix_timestamp(t1.B2create_time) ) / 60) else NULL end) as s4,---复审实际时间
(case when t1.Ccreate_time is not NULL then ((unix_timestamp(t1.Ccreate_time) - unix_timestamp(t1.B2update_time) ) / 60) else NULL end) as s5, ---复审结束-支付流转时间
(case when t1.Cpay_time is not NULL then ((unix_timestamp(t1.Cpay_time) - unix_timestamp(t1.Ccreate_time) ) / 60) else NULL end) as s6,  --- 支付实际时间
(case when t1.apply_time is not NULL and t1.Cpay_time is not NULL  then ((unix_timestamp(t1.apply_time) - unix_timestamp(t1.Cpay_time) ) / 60) else NULL end) as s7, --- 支付结束-合同审核流转时间
(case when t1.apply_time is not NULL and t1.last_audit_time is not NULL then ((unix_timestamp(t1.last_audit_time) - unix_timestamp(t1.apply_time) ) / 60) else NULL end) as s8,--- 合同审核实际时间
(case when t1.loan_time is not NULL and t1.last_audit_time is not NULL then ((unix_timestamp(t1.loan_time) - unix_timestamp(t1.last_audit_time) ) / 60) else NULL end) as s9,--- 合同通过到放款实际时间
(case when t1.loan_time is not NULL then ((unix_timestamp(t1.loan_time) - unix_timestamp(t1.Acreate_time) ) / (3600)) else NULL end) as s10   --- 进件到放款实际时间
from 
(
select 
distinct
cast(a.opay_id as string) `opay_id`,
cast(a.order_id as string) `order_id`,
cast(a.user_id as string) `user_id`,
a.order_status,
a.create_time as `Acreate_time`,   ---进件时间
a.terms,
a.down_payment,
b1.create_time as `B1create_time`,  ---初审创建时间
b1.update_time as `B1update_time`,  ---初审结束时间
b2.create_time as `B2create_time`,  ---复审创建时间
b2.update_time as `B2update_time`,  ---复审结束时间
c.create_time as `Ccreate_time`,    ---支付创建时间
c.pay_time as `Cpay_time`,          ---支付结束时间
d.apply_time,                      ---合同审核开始时间
d.last_audit_time,                 ---合同审核结束时间
a.loan_time

from 

(select 
opay_id,
order_id,
user_id,
order_status,
create_time,
loan_time,
terms,
down_payment
from ocredit_phones_dw_ods.ods_sqoop_base_t_order_df     ----主订单表，过滤掉测试数据
where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
and to_date(create_time)>='2019-12-28'
and user_id not in 
(
'1209783514507214849', 
'1209126038292123650',
'1210903150317494274',
'1214471918163460097',
'1215642304343425026',
'1226878328587288578')
and business_type = '0'
) as a

left join 
(
select order_id,min(create_time) as create_time,max(update_time) as update_time
from ocredit_phones_dw_ods.ods_sqoop_base_t_order_audit_history_df  ---审批记录表，1是初审
where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
and audit_type='1'
group by order_id
)b1 on a.order_id=b1.order_id

left join 
(
select order_id,min(create_time) as create_time,max(update_time) as update_time
from ocredit_phones_dw_ods.ods_sqoop_base_t_order_audit_history_df  ---审批记录表，2是复审
where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
and audit_type='2'
group by order_id
)b2 on a.order_id=b2.order_id

left join
(
select order_id,min(create_time) as create_time,max(pay_time) as pay_time
from ocredit_phones_dw_ods.ods_sqoop_base_t_pay_order_df   ---首付款支付信息表
where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
and pay_type='0'
and business_type='0'
group by order_id
) as c on a.order_id=c.order_id

left join 
(
select order_id,min(apply_time) as apply_time,max(last_audit_time) as last_audit_time,
max(final_audit_pass) as final_audit_pass
from ocredit_phones_dw_ods.ods_sqoop_base_t_contract_df     ---合同信息表，
where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
and business_type='0'
group by order_id
)as d
on a.order_id=d.order_id 
)t1 
)t2
---where substr(t2.Acreate_time,1,7) = substr(date_sub(current_date(),1),1,7)
group by substr(t2.Acreate_time,1,7)
with rollup
order by `进件月份` desc ;
















---下面我的：




CREATE EXTERNAL TABLE ocredit_phones_dw.app_ocredit_phones_risk_control_cube_d(  
date_of_entry string comment '进件日期',
month_of_entry string comment '进件月',
week_of_entry string comment '进件周',
entry_order_cnt bigint comment '进件订单数',
entry_opay_cnt bigint comment '进件用户数',
pre_amount bigint comment '初审通过量',
review_amount bigint comment '复审通过量',
loan_cnt bigint comment '放款量',
pre_actual_average_minute bigint comment '初审实际用时(分) 当天（月，周）平均',
review_actual_average_minute bigint comment '复审实际用时(分) 当天（月，周）平均',
pay_actual_average_minute bigint comment '支付实际用时(分) 当天（月，周）平均',
contract_review_average_minute bigint comment '合同审核实际用时(分) 当天（月，周）平均',
total_use_average_minute bigint comment '总用时(时) 当天（月，周）平均'
)
COMMENT '风控全流程通过率及时效分析汇总表'  
PARTITIONED BY (   
country_code string COMMENT '二位国家码',
dt string COMMENT '分区时间'
)
STORED AS orc  
LOCATION  
 'oss://opay-datalake/ocredit_phones/ocredit_phones_dw/app_ocredit_phones_risk_control_cube_d'
TBLPROPERTIES (  
'orc.compress'='SNAPPY'
);




          select
          to_date(t2.Acreate_time) as date_of_entry,--`进件日期`,
          substr(to_date(t2.Acreate_time),1,7) as month_of_entry,--进件月
          concat(date_add(next_day(to_date(t2.Acreate_time),'MO'),-7),'_',date_add(next_day(to_date(t2.Acreate_time),'MO'),-1)) as week_of_entry,--进件周
          count(distinct t2.order_id) as entry_order_cnt,--`进件订单数`,
          count(distinct t2.opay_id) as entry_opay_cnt,--`进件用户数`,
          
          count(distinct case when t2.order_status not in ('10','12','13','99') then t2.opay_id else null end) as pre_amount,--`初审通过量`,
          count(distinct case when t2.order_status not in ('10','11','12','13','30','32','99') then t2.opay_id else null end) as review_amount,--`复审通过量`,
          
          count(distinct case when t2.order_status ='81' then t2.opay_id else null end) as loan_cnt,--放款量
          
          ---round(avg(case when t2.s10 is not null then t2.s1 else null end),2)as `进件-初审流转用时(分)`,
          avg(case when t2.s10 is not null then t2.s2 else null end) as pre_actual_average_minute, --`初审实际用时(分)`,
          ---round(avg(case when t2.s10 is not null then t2.s3 else null end),2) as `初审-复审流转用时(分)`,
          avg(case when t2.s10 is not null then t2.s4 else null end) as review_actual_average_minute,--`复审实际用时(分)`,
          ---round(avg(case when t2.s10 is not null then t2.s5 else null end),2) as `复审-支付流转用时(分)`,
          avg(case when t2.s10 is not null then t2.s6 else null end) as pay_actual_average_minute,--`支付实际用时(分)`,
          ---round(avg(case when t2.s10 is not null then t2.s7 else null end),2) as `支付-合同流转用时(分)`,
          avg(case when t2.s10 is not null then t2.s8 else null end) as contract_review_average_minute,--`合同审核实际用时(分)`,
          ---round(avg(case when t2.s10 is not null then t2.s9 else null end),2) as `合同审核-放款流转用时(分)`,
          avg(case when t2.s10 is not null then t2.s10 else null end) as total_use_average_minute--`总用时(时)`
          
          
          from 
          (select 
          t1.Acreate_time,
          t1.opay_id,
          t1.order_id,
          t1.user_id,
          t1.terms,
          t1.order_status,
          ((unix_timestamp(t1.B1create_time) - unix_timestamp(t1.Acreate_time) ) / 60) as s1,      ----进件日初审流转时间
          ((unix_timestamp(t1.B1update_time) - unix_timestamp(t1.B1create_time) ) / 60) as s2,----初审实际时间
          (case when t1.B2create_time is not NULL then ((unix_timestamp(t1.B2create_time) - unix_timestamp(t1.B1update_time) ) / 60) else NULL end) as s3, ---初审结束-复审开始流转时间
          (case when t1.B2update_time is not NULL then ((unix_timestamp(t1.B2update_time) - unix_timestamp(t1.B2create_time) ) / 60) else NULL end) as s4,---复审实际时间
          (case when t1.Ccreate_time is not NULL then ((unix_timestamp(t1.Ccreate_time) - unix_timestamp(t1.B2update_time) ) / 60) else NULL end) as s5, ---复审结束-支付流转时间
          (case when t1.Cpay_time is not NULL then ((unix_timestamp(t1.Cpay_time) - unix_timestamp(t1.Ccreate_time) ) / 60) else NULL end) as s6,  --- 支付实际时间
          (case when t1.apply_time is not NULL and t1.Cpay_time is not NULL  then ((unix_timestamp(t1.apply_time) - unix_timestamp(t1.Cpay_time) ) / 60) else NULL end) as s7, --- 支付结束-合同审核流转时间
          (case when t1.apply_time is not NULL and t1.last_audit_time is not NULL then ((unix_timestamp(t1.last_audit_time) - unix_timestamp(t1.apply_time) ) / 60) else NULL end) as s8,--- 合同审核实际时间
          (case when t1.loan_time is not NULL and t1.last_audit_time is not NULL then ((unix_timestamp(t1.loan_time) - unix_timestamp(t1.last_audit_time) ) / 60) else NULL end) as s9,--- 合同通过到放款实际时间
          (case when t1.loan_time is not NULL then ((unix_timestamp(t1.loan_time) - unix_timestamp(t1.Acreate_time) ) / (3600)) else NULL end) as s10   --- 进件到放款实际时间
          from 
          (
          select 
          distinct
          cast(a.opay_id as string) `opay_id`,
          cast(a.order_id as string) `order_id`,
          cast(a.user_id as string) `user_id`,
          a.order_status,
          a.create_time as `Acreate_time`,   ---进件时间
          a.terms,
          a.down_payment,
          b1.create_time as `B1create_time`,  ---初审创建时间
          b1.update_time as `B1update_time`,  ---初审结束时间
          b2.create_time as `B2create_time`,  ---复审创建时间
          b2.update_time as `B2update_time`,  ---复审结束时间
          c.create_time as `Ccreate_time`,    ---支付创建时间
          c.pay_time as `Cpay_time`,          ---支付结束时间
          d.apply_time,                      ---合同审核开始时间
          d.last_audit_time,                 ---合同审核结束时间
          a.loan_time
          
          from 
          
          (select 
          opay_id,
          order_id,
          user_id,
          order_status,
          from_unixtime(unix_timestamp(create_time)+3600,'yyyy-MM-dd HH:mm:ss') as create_time, --创建时间 
          from_unixtime(unix_timestamp(loan_time)+3600,'yyyy-MM-dd HH:mm:ss') as loan_time,--放款时间 
          terms,
          down_payment
          from ocredit_phones_dw_ods.ods_sqoop_base_t_order_df     ----主订单表，过滤掉测试数据
          where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and to_date(create_time)>='2019-12-28'
          and user_id not in 
          (
          '1209783514507214849', 
          '1209126038292123650',
          '1210903150317494274',
          '1214471918163460097',
          '1215642304343425026',
          '1226878328587288578')
          and business_type = '0'
          ) as a
          
          left join 
          (
          select order_id,min(from_unixtime(unix_timestamp(create_time)+3600,'yyyy-MM-dd HH:mm:ss')) as create_time,
          max(from_unixtime(unix_timestamp(update_time)+3600,'yyyy-MM-dd HH:mm:ss')) as update_time
          from ocredit_phones_dw_ods.ods_sqoop_base_t_order_audit_history_df  ---审批记录表，1是初审
          where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and audit_type='1'
          group by order_id
          )b1 on a.order_id=b1.order_id
          
          left join 
          (
          select order_id,min(from_unixtime(unix_timestamp(create_time)+3600,'yyyy-MM-dd HH:mm:ss')) as create_time,
          max(from_unixtime(unix_timestamp(update_time)+3600,'yyyy-MM-dd HH:mm:ss')) as update_time
          from ocredit_phones_dw_ods.ods_sqoop_base_t_order_audit_history_df  ---审批记录表，2是复审
          where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and audit_type='2'
          group by order_id
          )b2 on a.order_id=b2.order_id
          
          left join
          (
          select order_id,min(from_unixtime(unix_timestamp(create_time)+3600,'yyyy-MM-dd HH:mm:ss')) as create_time,
          max(from_unixtime(unix_timestamp(pay_time)+3600,'yyyy-MM-dd HH:mm:ss')) as pay_time
          from ocredit_phones_dw_ods.ods_sqoop_base_t_pay_order_df   ---首付款支付信息表
          where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and pay_type='0'
          and business_type='0'
          group by order_id
          ) as c on a.order_id=c.order_id
          
          left join 
          (
          select order_id,
          min(from_unixtime(unix_timestamp(apply_time)+3600,'yyyy-MM-dd HH:mm:ss')) as apply_time,
          max(from_unixtime(unix_timestamp(last_audit_time)+3600,'yyyy-MM-dd HH:mm:ss')) as last_audit_time,
          max(from_unixtime(unix_timestamp(final_audit_pass)+3600,'yyyy-MM-dd HH:mm:ss')) as final_audit_pass
          from ocredit_phones_dw_ods.ods_sqoop_base_t_contract_df     ---合同信息表，
          where dt=date_add(from_unixtime(unix_timestamp(),'yyyy-MM-dd'),-1)
          and business_type='0'
          group by order_id
          )as d
          on a.order_id=d.order_id 
          )t1 
          )t2
          group by to_date(t2.Acreate_time),substr(to_date(t2.Acreate_time),1,7),concat(date_add(next_day(to_date(t2.Acreate_time),'MO'),-7),'_',date_add(next_day(to_date(t2.Acreate_time),'MO'),-1))
          grouping sets(
          to_date(t2.Acreate_time),substr(to_date(t2.Acreate_time),1,7),concat(date_add(next_day(to_date(t2.Acreate_time),'MO'),-7),'_',date_add(next_day(to_date(t2.Acreate_time),'MO'),-1))
          )

     






1.


          select
          to_date(t2.Acreate_time) as date_of_entry,--`进件日期`,
          substr(to_date(t2.Acreate_time),1,7) as month_of_entry,--进件月
          concat(date_add(next_day(to_date(t2.Acreate_time),'MO'),-7),'_',date_add(next_day(to_date(t2.Acreate_time),'MO'),-1)) as week_of_entry,--进件周
          count(distinct t2.order_id) as entry_order_cnt,--`进件订单数`,
          count(distinct t2.opay_id) as entry_opay_cnt,--`进件用户数`,
          
          count(distinct case when t2.order_status not in ('10','12','13','99') then t2.opay_id else null end) as pre_amount,--`初审通过量`,
          count(distinct case when t2.order_status not in ('10','11','12','13','30','32','99') then t2.opay_id else null end) as review_amount,--`复审通过量`,
          
          count(distinct case when t2.order_status ='81' then t2.opay_id else null end) as loan_cnt,--放款量
          
          ---round(avg(case when t2.s10 is not null then t2.s1 else null end),2)as `进件-初审流转用时(分)`,
          avg(case when t2.s10 is not null then t2.s2 else null end) as pre_actual_average_minute, --`初审实际用时(分)`,
          ---round(avg(case when t2.s10 is not null then t2.s3 else null end),2) as `初审-复审流转用时(分)`,
          avg(case when t2.s10 is not null then t2.s4 else null end) as review_actual_average_minute,--`复审实际用时(分)`,
          ---round(avg(case when t2.s10 is not null then t2.s5 else null end),2) as `复审-支付流转用时(分)`,
          avg(case when t2.s10 is not null then t2.s6 else null end) as pay_actual_average_minute,--`支付实际用时(分)`,
          ---round(avg(case when t2.s10 is not null then t2.s7 else null end),2) as `支付-合同流转用时(分)`,
          avg(case when t2.s10 is not null then t2.s8 else null end) as contract_review_average_minute,--`合同审核实际用时(分)`,
          ---round(avg(case when t2.s10 is not null then t2.s9 else null end),2) as `合同审核-放款流转用时(分)`,
          avg(case when t2.s10 is not null then t2.s10 else null end) as total_use_average_minute--`总用时(时)`



select
case when to_date(t2.Acreate_time) is not null then to_date(t2.Acreate_time) else  '合计' end as `进件日期`,
count(distinct t2.order_id) as `进件订单数`,
count(distinct t2.opay_id) as `进件用户数`,
concat(round(count(distinct case when t2.order_status not in ('10','12','13','99') then t2.opay_id else null end)/count(distinct t2.opay_id)*100,2),'%')  as `初审通过率`,
concat(round(count(distinct case when t2.order_status not in ('10','11','12','13','30','32','99') then t2.opay_id else null end)/count(distinct case when t2.order_status not in (10,12,13,99) then t2.opay_id else null end)*100,2),'%')  as `复审通过率`,

concat(round(count(distinct case when t2.order_status ='81' then t2.opay_id else null end)/count(distinct case when t2.order_status not in ('10','11','12','13','30','32','99')  then t2.opay_id else null end)*100,2),'%')  as `复审到放款转化率`,
concat(round(count(distinct case when t2.order_status not in ('10','11','12','13','30','32','99') then t2.opay_id else null end)/count(distinct t2.opay_id)*100,2),'%')  as `进件到风控通过转化率`,
concat(round(count(distinct case when t2.order_status ='81' then t2.opay_id else null end)/count(distinct t2.opay_id)*100,2),'%')  as `进件到放款转化率`,

---round(avg(case when t2.s10 is not null then t2.s1 else null end),2)as `进件-初审流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s2 else null end),2)as `初审实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s3 else null end),2) as `初审-复审流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s4 else null end),2) as `复审实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s5 else null end),2) as `复审-支付流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s6 else null end),2) as `支付实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s7 else null end),2) as `支付-合同流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s8 else null end),2) as `合同审核实际用时(分)`,
---round(avg(case when t2.s10 is not null then t2.s9 else null end),2) as `合同审核-放款流转用时(分)`,
round(avg(case when t2.s10 is not null then t2.s10 else null end),2) as `总用时(时)`




          select
          date_of_entry,
          entry_order_cnt,
          entry_opay_cnt,
          concat(round(pre_amount/entry_opay_cnt*100,2),'%'),
          concat(round(review_amount/pre_amount*100,2),'%'),
          
          concat(round(loan_cnt/review_amount*100,2),'%'),
          concat(round(review_amount/entry_opay_cnt*100,2),'%'),
          concat(round(loan_cnt/entry_opay_cnt*100,2),'%'),
          
          round(pre_actual_average_minute,2),
          round(review_actual_average_minute,2),
          round(pay_actual_average_minute,2),
          round(contract_review_average_minute,2),
          round(total_use_average_minute,2)
          
          from
          ocredit_phones_dw.app_ocredit_phones_risk_control_cube_d 
          where date_of_entry is not null
          and dt='{dt}'
          and substr(date_of_entry,1,7) = substr('{dt}',1,7)
          order by date_of_entry desc





          select
          month_of_entry,
          entry_order_cnt,
          entry_opay_cnt,
          concat(round(pre_amount/entry_opay_cnt*100,2),'%'),
          concat(round(review_amount/pre_amount*100,2),'%'),
          
          concat(round(loan_cnt/review_amount*100,2),'%'),
          concat(round(review_amount/entry_opay_cnt*100,2),'%'),
          concat(round(loan_cnt/entry_opay_cnt*100,2),'%'),
          
          round(pre_actual_average_minute,2),
          round(review_actual_average_minute,2),
          round(pay_actual_average_minute,2),
          round(contract_review_average_minute,2),
          round(total_use_average_minute,2)
          
          from
          ocredit_phones_dw.app_ocredit_phones_risk_control_cube_d 
          where month_of_entry is not null
          and dt='{dt}'
          order by month_of_entry desc







          select
          week_of_entry,
          entry_order_cnt,
          entry_opay_cnt,
          concat(round(pre_amount/entry_opay_cnt*100,2),'%'),
          concat(round(review_amount/pre_amount*100,2),'%'),
          
          concat(round(loan_cnt/review_amount*100,2),'%'),
          concat(round(review_amount/entry_opay_cnt*100,2),'%'),
          concat(round(loan_cnt/entry_opay_cnt*100,2),'%'),
          
          round(pre_actual_average_minute,2),
          round(review_actual_average_minute,2),
          round(pay_actual_average_minute,2),
          round(contract_review_average_minute,2),
          round(total_use_average_minute,2)
          
          from
          ocredit_phones_dw.app_ocredit_phones_risk_control_cube_d 
          where week_of_entry is not null
          and dt='{dt}'
          order by week_of_entry desc










alter table app_ocredit_phones_risk_control_cube_d change column total_use_average_minute total_use_average_hour bigint ;












